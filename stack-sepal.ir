{:package "client",
 :files {"comp.container" {:ns ["ns"
                                "client.comp.container"
                                [":require"
                                 ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                 ["[]" "respo-ui.style" ":as" "ui"]
                                 ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]]
                                 ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                                 ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                                 ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]
                                 ["[]" "client.comp.header" ":refer" ["[]" "comp-header"]]
                                 ["[]" "client.comp.home" ":refer" ["[]" "comp-home"]]
                                 ["[]" "client.comp.discuss" ":refer" ["[]" "comp-discuss"]]
                                 ["[]" "client.comp.guide" ":refer" ["[]" "comp-guide"]]
                                 ["[]" "client.comp.docs" ":refer" ["[]" "comp-docs"]]]],
                           :defs {"comp-container" ["def"
                                                    "comp-container"
                                                    ["create-comp"
                                                     ":container"
                                                     ["fn"
                                                      ["store"]
                                                      ["fn"
                                                       ["state" "mutate!"]
                                                       ["let"
                                                        [["router" [":router" "store"]]]
                                                        ["div"
                                                         ["{}" [":style" ["merge" "ui/global"]]]
                                                         ["comp-header"]
                                                         ["case"
                                                          [":name" "router"]
                                                          ["|home" ["comp-home"]]
                                                          ["|index.html" ["comp-home"]]
                                                          ["|dev.html" ["comp-home"]]
                                                          ["|discuss.html" ["comp-discuss"]]
                                                          ["|guide"
                                                           ["comp-guide"
                                                            ["get-in" "router" ["[]" ":data" "|guide-path"]]]]
                                                          ["|docs"
                                                           ["comp-docs" ["get-in" "router" ["[]" ":data" "|docs-path"]]]]
                                                          "nil"]
                                                         ["comp-debug" "store" ["{}" [":bottom" "0"]]]]]]]]]},
                           :procs []},
         "main" {:ns ["ns"
                      "client.main"
                      [":require"
                       ["[]"
                        "respo.core"
                        ":refer"
                        ["[]" "render!" "clear-cache!" "falsify-stage!" "render-element" "gc-states!"]]
                       ["[]" "client.comp.container" ":refer" ["[]" "comp-container"]]
                       ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]
                       ["[]" "respo-router.core" ":refer" ["[]" "render-url!"]]
                       ["[]" "respo-router.util.listener" ":refer" ["[]" "listen!" "parse-address"]]
                       ["[]" "client.schema" ":as" "schema"]]],
                 :defs {"dispatch!" ["defn"
                                     "dispatch!"
                                     ["op" "op-data"]
                                     ["let"
                                      [["new-store"
                                        ["case"
                                         "op"
                                         [":router/set"
                                          ["assoc" "@store-ref" ":router" ["parse-address" "op-data" "schema/routes"]]]
                                         "@store-ref"]]]
                                      ["reset!" "store-ref" "new-store"]]],
                        "mode" ["def" "mode" ":history"],
                        "-main!" ["defn"
                                  "-main!"
                                  []
                                  ["enable-console-print!"]
                                  ["if"
                                   ["not" ["empty?" "ssr-stages"]]
                                   ["let"
                                    [["target" [".querySelector" "js/document" "|#app"]]]
                                    ["falsify-stage!"
                                     "target"
                                     ["render-element" ["comp-container" "@store-ref" "ssr-stages"] "states-ref"]
                                     "dispatch!"]]]
                                  ["render-app!"]
                                  ["add-watch" "store-ref" ":gc" ["fn" [] ["gc-states!" "states-ref"]]]
                                  ["add-watch" "store-ref" ":changes" "render-app!"]
                                  ["add-watch" "states-ref" ":changes" "render-app!"]
                                  ["add-watch"
                                   "store-ref"
                                   ":router"
                                   ["fn" [] ["render-url!" [":router" "@store-ref"] "schema/routes" ":history"]]]
                                  ["listen!" "schema/routes" "dispatch!" ":history"]
                                  ["println" "|App started!"]],
                        "render-app!" ["defn"
                                       "render-app!"
                                       []
                                       ["let"
                                        [["target" [".querySelector" "js/document" "|#app"]]]
                                        ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]],
                        "store-ref" ["defonce"
                                     "store-ref"
                                     ["atom"
                                      ["{}" [":router" ["parse-address" "js/location.pathname" "schema/routes"]]]]],
                        "states-ref" ["defonce" "states-ref" ["atom" ["{}"]]],
                        "on-jsload!" ["defn"
                                      "on-jsload!"
                                      []
                                      ["clear-cache!"]
                                      ["render-app!"]
                                      ["println" "|Code updated."]],
                        "ssr-stages" ["def"
                                      "ssr-stages"
                                      ["let"
                                       [["ssr-element" [".querySelector" "js/document" "|#ssr-stages"]]
                                        ["ssr-markup" [".getAttribute" "ssr-element" "|content"]]]
                                       ["read-string" "ssr-markup"]]]},
                 :procs [["set!" [".-onload" "js/window"] "-main!"]]},
         "schema" {:ns ["ns" "client.schema"],
                   :defs {"routes" ["def"
                                    "routes"
                                    ["{}"
                                     ["|home" ["[]"]]
                                     ["|index.html" ["[]"]]
                                     ["|dev.html" ["[]"]]
                                     ["|guide" ["[]" "|guide-path"]]
                                     ["|docs" ["[]" "|docs-path"]]
                                     ["|discuss.html" ["[]"]]]]},
                   :procs []},
         "comp.header" {:ns ["ns"
                             "client.comp.header"
                             [":require"
                              ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                              ["[]" "respo-ui.style" ":as" "ui"]
                              ["[]" "respo-ui.style.colors" ":as" "colors"]
                              ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "a"]]
                              ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                              ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                              ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]]],
                        :defs {"comp-header" ["def"
                                              "comp-header"
                                              ["create-comp"
                                               ":header"
                                               ["fn"
                                                []
                                                ["fn"
                                                 ["state" "mutate!"]
                                                 ["div"
                                                  ["{}" [":style" "style-header"]]
                                                  ["div"
                                                   ["{}"]
                                                   ["render-link" "|Respo" "|"]
                                                   ["render-link" "|Guide" "|guide/why-respo.html"]
                                                   ["render-link" "|API Docs" "|docs/overview.html"]
                                                   ["render-link" "|Discuss" "|discuss.html"]]
                                                  ["div"
                                                   ["{}"]
                                                   ["a"
                                                    ["{}"
                                                     [":attrs"
                                                      ["{}"
                                                       [":href" "|https://github.com/Respo"]
                                                       [":inner-text" "|GitHub"]]]
                                                     [":style" "style-github"]]]]]]]]],
                               "style-header" ["def"
                                               "style-header"
                                               ["merge"
                                                "ui/row"
                                                ["{}" [":justify-content" ":space-between"] [":padding" "|0 16px"]]]],
                               "render-link" ["defn"
                                              "render-link"
                                              ["text" "path"]
                                              ["div"
                                               ["{}"
                                                [":style" "style-link"]
                                                [":event"
                                                 ["{}"
                                                  [":click" ["fn" ["e" "dispatch!"] ["dispatch!" ":router/set" "path"]]]]]
                                                [":attrs" ["{}" [":inner-text" "text"]]]]]],
                               "style-link" ["def"
                                             "style-link"
                                             ["{}" [":display" ":inline-block"] [":width" "80"] [":cursor" ":pointer"]]],
                               "style-github" ["def" "style-github" ["{}" [":text-decoration" ":none"]]]},
                        :procs []},
         "comp.home" {:ns ["ns"
                           "client.comp.home"
                           [":require"
                            ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                            ["[]" "respo-ui.style" ":as" "ui"]
                            ["[]" "respo-ui.style.colors" ":as" "colors"]
                            ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "a" "img"]]
                            ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                            ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                            ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]]],
                      :defs {"comp-home" ["def"
                                          "comp-home"
                                          ["create-comp"
                                           ":home"
                                           ["fn"
                                            []
                                            ["fn"
                                             ["state" "mutate!"]
                                             ["div"
                                              ["{}" [":style" ["merge" "ui/column" "ui/center"]]]
                                              ["comp-space" "nil" "48"]
                                              ["div"
                                               ["{}"]
                                               ["div" ["{}" [":style" "style-logo"]]]
                                               ["comp-space" "8" "nil"]
                                               ["comp-text" "|Respo" "style-logo-name"]]
                                              ["comp-space" "nil" "24"]
                                              ["div"
                                               ["{}"]
                                               ["comp-text" "| A front-end MVC library in ClojureScript" "nil"]
                                               ["comp-space" "8" "nil"]
                                               ["img"
                                                ["{}"
                                                 [":attrs"
                                                  ["{}" [":src" "|https://img.shields.io/clojars/v/respo.svg"]]]]]]]]]]],
                             "style-logo" ["def"
                                           "style-logo"
                                           ["{}"
                                            [":width" "80"]
                                            [":height" "80"]
                                            [":background-image"
                                             ["str" "|url(https://avatars3.githubusercontent.com/u/20469468?v=3&s=200)"]]
                                            [":background-size" ":cover"]
                                            [":display" ":inline-block"]
                                            [":vertical-align" ":middle"]]],
                             "style-logo-name" ["def"
                                                "style-logo-name"
                                                ["{}" [":font-size" "40"] [":vertical-align" ":middle"]]]},
                      :procs []},
         "comp.discuss" {:ns ["ns"
                              "client.comp.discuss"
                              [":require"
                               ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                               ["[]" "respo-ui.style" ":as" "ui"]
                               ["[]" "respo-ui.style.colors" ":as" "colors"]
                               ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "a"]]
                               ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                               ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                               ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]
                               ["[]" "respo-markdown.comp.md-article" ":refer" ["[]" "comp-md-article"]]
                               ["[]" "client.guide" ":as" "guide"]]],
                         :defs {"comp-discuss" ["def"
                                                "comp-discuss"
                                                ["create-comp"
                                                 ":discuss"
                                                 ["fn"
                                                  []
                                                  ["fn"
                                                   ["state" "mutate!"]
                                                   ["div"
                                                    ["{}" [":style" "style-page"]]
                                                    ["comp-md-article" "guide/discuss" ["{}"]]]]]]],
                                "style-page" ["def"
                                              "style-page"
                                              ["{}" [":width" "1200"] [":margin" ":auto"] [":margin-top" "80"]]]},
                         :procs []},
         "comp.guide" {:ns ["ns"
                            "client.comp.guide"
                            [":require"
                             ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                             ["[]" "respo-ui.style" ":as" "ui"]
                             ["[]" "respo-ui.style.colors" ":as" "colors"]
                             ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "a"]]
                             ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                             ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                             ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]
                             ["[]" "respo-markdown.comp.md-article" ":refer" ["[]" "comp-md-article"]]
                             ["[]" "client.guide" ":as" "guide"]]],
                       :defs {"comp-guide" ["def"
                                            "comp-guide"
                                            ["create-comp"
                                             ":guide"
                                             ["fn"
                                              ["path"]
                                              ["fn"
                                               ["state" "mutate!"]
                                               ["div"
                                                ["{}" [":style" "ui/row"]]
                                                ["render-sidebar" "path"]
                                                ["comp-md-article"
                                                 ["case"
                                                  "path"
                                                  ["|tutorial.html" "guide/tutorial"]
                                                  ["|dom-elements.html" "guide/dom-elements"]
                                                  ["|dom-events.html" "guide/dom-events"]
                                                  ["|dom-properties.html" "guide/dom-properties"]
                                                  ["|environment.html" "guide.environment"]
                                                  ["|hot-swapping.html" "guide/hot-swapping"]
                                                  ["|styles.html" "guide/styles"]
                                                  ["|trouble-shooting.html" "guide/trouble-shooting"]
                                                  ["|pros-and-cons.html" "guide/pros-and-cons"]
                                                  ["|why-respo.html" "guide/why-respo"]
                                                  ["|render-list" "guide/render-list"]
                                                  ["|base-components.html" "guide/base-components"]
                                                  ["|virtual-dom.html" "guide/virtual-dom"]
                                                  ["|server-rendering.html" "guide/server-rendering"]
                                                  "nil"]]]]]]],
                              "render-sidebar" ["defn"
                                                "render-sidebar"
                                                ["entry"]
                                                ["div"
                                                 ["{}"]
                                                 ["render-entry" "|why-respo" "|Why Respo?" "entry"]
                                                 ["render-entry" "|pros-and-cons" "|Pros and Cons" "entry"]
                                                 ["render-entry" "|environment" "|Environment" "entry"]
                                                 ["render-entry" "|tutorial" "|Tutorial" "entry"]
                                                 ["render-entry" "|dom-elements" "|DOM Elements" "entry"]
                                                 ["render-entry" "|dom-properties" "|DOM Properties" "entry"]
                                                 ["render-entry" "|dom-events" "|DOM Events" "entry"]
                                                 ["render-entry" "|styles" "|Styles" "entry"]
                                                 ["render-entry" "|virtual-dom" "|Virtual DOM" "entry"]
                                                 ["render-entry" "|render-list" "|List Rendering" "entry"]
                                                 ["render-entry" "|hot-swapping" "|Hot Swapping" "entry"]
                                                 ["render-entry" "|base-components" "|Base Components" "entry"]
                                                 ["render-entry" "|server-rendering" "|Server Rendering" "entry"]
                                                 ["render-entry" "|trouble-shooting" "|Trouble Shooting" "entry"]]],
                              "render-entry" ["defn"
                                              "render-entry"
                                              ["path" "title" "cursor"]
                                              ["div"
                                               ["{}"
                                                [":attrs" ["{}" [":inner-text" "title"]]]
                                                [":event"
                                                 ["{}"
                                                  [":click"
                                                   ["fn"
                                                    ["e" "dispatch!"]
                                                    ["dispatch!" ":router/set" ["str" "|guide/" "path" "|.html"]]]]]]
                                                [":style"
                                                 ["merge"
                                                  "style-link"
                                                  ["if" ["=" "cursor" "path"] ["{}" [":color" "colors/texture-light"]]]]]]]],
                              "style-link" ["def" "style-link" ["{}" [":cursor" ":pointer"]]]},
                       :procs []},
         "comp.docs" {:ns ["ns"
                           "client.comp.docs"
                           [":require"
                            ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                            ["[]" "respo-ui.style" ":as" "ui"]
                            ["[]" "respo-ui.style.colors" ":as" "colors"]
                            ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span" "a"]]
                            ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]]
                            ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]
                            ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]
                            ["[]" "respo-markdown.comp.md-article" ":refer" ["[]" "comp-md-article"]]
                            ["[]" "client.docs" ":as" "docs"]]],
                      :defs {"comp-docs" ["def"
                                          "comp-docs"
                                          ["create-comp"
                                           ":docs"
                                           ["fn"
                                            ["path"]
                                            ["fn"
                                             ["state" "mutate!"]
                                             ["div"
                                              ["{}" [":style" "ui/row"]]
                                              ["render-sidebar" "path"]
                                              ["comp-md-article"
                                               ["case"
                                                "path"
                                                ["|activate-instance.html" "docs/activate-instance"]
                                                ["|build-deliver-event.html" "docs/build-deliver-event"]
                                                ["|comp-debug.html" "docs/comp-debug"]
                                                ["|comp-space.html" "docs/comp-space"]
                                                ["|comp-text.html" "docs/comp-text"]
                                                ["|comp-code.html" "docs/comp-code"]
                                                ["|create-comp.html" "docs/create-comp"]
                                                ["|create-element.html" "docs/create-element"]
                                                ["|element.html" "docs/element"]
                                                ["|falsify-stage!.html" "docs/falsify-stage_"]
                                                ["|find-element-diffs.html" "docs/find-element-diffs"]
                                                ["|initialize-instance.html" "docs/initialize-instance"]
                                                ["|make-html.html" "docs/make-html"]
                                                ["|make-string.html" "docs/make-string"]
                                                ["|mutate-factory.html" "docs/mutate-factory"]
                                                ["|mute-element.html" "docs/mute-element"]
                                                ["|overview.html" "docs/overview"]
                                                ["|patch-instance.html" "docs/patch-instance"]
                                                ["|purify-element.html" "docs/purify-element"]
                                                ["|release-instance.html" "docs/release-instance"]
                                                ["|render-app.html" "docs/render-app"]
                                                ["|render!.html" "docs/render_"]
                                                ["|gc-states!.html" "docs/gc-states_"]
                                                ["|div.html" "docs/div"]
                                                ["|clear-cache!.html" "docs/clear-cache_"]
                                                ["|apply-dom-changes.html" "docs/apply-dom-changes"]
                                                "nil"]
                                               ["{}"]]]]]]],
                             "render-sidebar" ["defn"
                                               "render-sidebar"
                                               ["path"]
                                               ["div"
                                                ["{}"]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.alias"]
                                                 ["render-entry" "|div"]
                                                 ["render-entry" "|create-comp"]
                                                 ["render-entry" "|create-element"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.comp.text"]
                                                 ["render-entry" "|comp-text"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.comp.code"]
                                                 ["render-entry" "|comp-code"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.comp.space"]
                                                 ["render-entry" "|comp-space"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.comp.debug"]
                                                 ["render-entry" "|comp-debug"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.core"]
                                                 ["render-entry" "|render!"]
                                                 ["render-entry" "|clear-cache!"]
                                                 ["render-entry" "|falsify-stage!"]
                                                 ["render-entry" "|gc-states!"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.render.html"]
                                                 ["render-entry" "|make-string"]
                                                 ["render-entry" "|make-html"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.render.expander"]
                                                 ["render-entry" "|render-app"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.util.format"]
                                                 ["render-entry" "|purify-element"]
                                                 ["render-entry" "|mute-element"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.render.differ"]
                                                 ["render-entry" "|find-element-diffs"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.render.patcher"]
                                                 ["render-entry" "|apply-dom-changes"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.controller.client"]
                                                 ["render-entry" "|initialize-instance"]
                                                 ["render-entry" "|activate-instance"]
                                                 ["render-entry" "|patch-instance"]
                                                 ["render-entry" "|release-instance"]]
                                                ["div"
                                                 "props-group"
                                                 ["render-section" "|respo.controller.deliver"]
                                                 ["render-entry" "|build-deliver-event"]
                                                 ["render-entry" "|mutate-factory"]]]],
                             "render-section" ["defn"
                                               "render-section"
                                               ["text"]
                                               ["div" ["{}" [":style" "style-section"]] ["comp-text" "text" "nil"]]],
                             "render-entry" ["defn"
                                             "render-entry"
                                             ["path"]
                                             ["div"
                                              ["{}"
                                               [":attrs" ["{}" [":inner-text" "path"]]]
                                               [":event"
                                                ["{}"
                                                 [":click"
                                                  ["fn"
                                                   ["e" "dispatch!"]
                                                   ["dispatch!" ":router/set" ["str" "|docs/" "path" "|.html"]]]]]]
                                               [":style" "style-entry"]]]],
                             "style-entry" ["def" "style-entry" ["{}" [":cursor" ":pointer"] [":margin-left" "16"]]],
                             "props-group" ["def"
                                            "props-group"
                                            ["{}" [":style" ["{}" [":padding" "8"] [":min-width" "240"]]]]],
                             "style-section" ["def" "style-section" ["{}" [":color" "colors/texture-light"]]]},
                      :procs []}}}
